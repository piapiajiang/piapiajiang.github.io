<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>同步更新别人的仓库</title>
      <link href="/2022/12/05/synchronize-updates-to-other-repositories/"/>
      <url>/2022/12/05/synchronize-updates-to-other-repositories/</url>
      
        <content type="html"><![CDATA[<h3 id="删除重新-fork"><a href="#删除重新-fork" class="headerlink" title="删除重新 fork"></a>删除重新 fork</h3><p>fork 别人的仓库后，别人更新时，可以直接删除自己的仓库，然后重新 fork ，简单粗暴。</p><h3 id="使用命令行"><a href="#使用命令行" class="headerlink" title="使用命令行"></a>使用命令行</h3><p>也可以打开 github 的 Codespaces ，使用下面的命令来同步更新仓库</p><ul><li>设置别人仓库为我的upstream（此步骤近第一次需要）</li></ul><p><code>git remote add upstream https://github.com/jupeiqi/jupeiqi.github.io.git</code></p><ul><li>抓取 jupeiqi 原仓库的更新</li></ul><p><code>git fetch upstream</code></p><ul><li>合并远程的master分支</li></ul><p><code>git merge upstream/master</code></p><ul><li>把本地仓库向github仓库（你fork到自己名下的仓库）推送修改</li></ul><p><code>git push</code></p><ul><li><p>其他可能用到到命令</p></li><li><p>查看你的远程仓库的路径</p></li></ul><p><code>git remote -v</code></p><ul><li>检查本地是否有为提交的修改</li></ul><p><code>git status</code></p><ul><li><p>提交更新</p><pre class="line-numbers language-none"><code class="language-none">git add -A 或者git add filenamegit commit -m "note"git push origin mastergit status<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>切换分支</p></li></ul><p><code>git checkout master</code></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>experiences of journalism</title>
      <link href="/2022/11/30/experiences-of-journalism/"/>
      <url>/2022/11/30/experiences-of-journalism/</url>
      
        <content type="html"><![CDATA[<blockquote class="pullquote mindmap mindmap-md"><ul><li>怎么看新闻<ul><li>国际交流<ul><li>国际领导人来访：双边可能达成了某种协议。很多外贸的机会都是这么产生的</li><li>双方亲切友好的交谈：合作的可能性非常大</li><li>坦率交谈：分歧很大，暂时无法沟通</li><li>交换了意见：会谈的时候各说各的，没有达成什么实质性的协议</li><li>深入地交换了意见：双方无法达成协议，吵得很厉害</li><li>进了双方了解：双方分歧很大</li><li>会谈是有益的：双方这个目标暂时相差甚远，能坐下来谈都已经很好了</li></ul></li><li>领导出差<ul><li>去上市公司：可以考虑一下这个公司的股票</li><li>去参加某个展会：那这个行业的股票可以保持关注</li><li>到了某个地方，开了某个会，还播出了部分会议的内容：这个地方接下来就会有变革的可能，比如雄安新区、海南自贸区</li></ul></li><li>第几号文件：往往代表着某个领域有政策的支持</li><li>领导出访团：看好出访团中的企业</li><li>地方大员调动<ul><li>经济发达=&gt;经济落后：去提振经济，看好去处房价</li><li>经济落后=&gt;经济发达：去维稳、降热度</li></ul></li><li>告知性新闻：往往隐藏着机会</li><li>引导性新闻：往往反面更有机会<ul><li>让大家宽心：要多长个心眼，  尽量反着想</li><li>比如说外汇不要出逃，那么我们要反问的是，别人为什么要兑换外汇</li><li>再比如播出某企业家说中国税负不重的新闻，那就想想是不是真的不重</li></ul></li></ul></li></ul></blockquote><p>本文摘自 <a href="https://www.163.com/dy/article/HN9P4KRQ0548OE0E.html">https://www.163.com/dy/article/HN9P4KRQ0548OE0E.html</a></p><p>第一，国际领导人来访的这种新闻很重要，一般就意味着双边可能达成了某种协议。很多外贸的机会都是这么产生的。如果新闻里说双方亲切友好的交谈，那么合作的可能性非常大。如果只是说坦率交谈，那说明分歧很大，暂时无法沟通。如果只是说交换了意见，那意思就是会谈的时候各说各的，没有达成什么实质性的协议。如果说深入地交换了意见，意思就是双方无法达成协议，吵得很厉害或者新闻说增进了双方了解，意思就是双方分歧很大。如果说会谈是有益的，那证明双方这个目标暂时相差甚远，能坐下来谈都已经很好了。</p><p>第二，领导去哪里出差很重要，如果去上市公司参观，那接下来差不多就可以考虑一下这个公司的股票了，如果去参加某个展会，那这个行业的股票可以保持关注。如果领导到了某个地方，开了某个会，还播出了部分会议的内容，那这个地方接下来就会有变革的可能，比如雄安新区、海南自贸区。</p><p>第三，每年的第几号文件很重要，往往代表着某个领域有政策的支持。</p><p>第四，跟着领导出访的团队也要注意观察，往往带的团队成员都是那些真刀真枪能跟人签订单的，而且一般企业家在这段期间都是比较安全的，所以这样的企业这段时间都是被看好的，毕竟在中国这个企业做大了，就不仅仅是经商了。</p><p>第五，地方大员的调动也是重大的新闻。一般来说，经济发展好的地方要去经济落后的地方，那么这对后者的城市来说就该重点关注了。比如说合肥的领导要调去重庆，那就意味着重庆的房价看涨的几率会比较大。如果经济落后的地方领导调去了经济好的地方，那一般都是去维稳去了。接下来的热度有可能要降一降。</p><p>第六，如果新闻里让一个犯罪分子去道歉，一般就两种情况，第一民愤极大，需要去缓和，第二警告这个领域的其它人，就是所谓的杀鸡敬猴，就是你要小心了。比如某段时间里，这个微博上的一个大佬上新闻就忏悔，意思就是接下来要严管微博，不允许再出现同样的事情。</p><p>其实这么做也都是为了保护散户，不让他去扰乱市场，那普通人就不要再不知死活地再往里充金币了。另外，在新闻里说要让大家宽心的事情，都要多长几个心眼。尽量反着看，比如说外汇不要出逃，那咱们就要反过来想一下，为什么外汇要出逃，为什么人家要换外汇？再比如说播出某企业家说中国的税负不重。这类新闻你就好好想一想，是不是真的不重要，这都属于引导性的新闻。</p><p>归纳起来是这样的，对于告知性的新闻，往往隐藏着机会，对于引导类的新闻，往往我们需要反着看，这样机会更大。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 摘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度定制Hexo博客</title>
      <link href="/2022/11/30/shen-du-ding-zhi-hexo-bo-ke/"/>
      <url>/2022/11/30/shen-du-ding-zhi-hexo-bo-ke/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>建一个简洁的 hexo 真的非常简单快捷，但是加入一个一个插件的时候，就感觉有太多的坑，途中只解决了小部分问题，都在下面列出来了，还有很多问题，你所见博客中很多奇怪的页面，很多我都已经注意到了，但是就是无法解决，如果你恰巧看到我的博客的一些不合理之处，又知道如何解决，欢迎邮我评我issue我，感激不尽。</p><h4 id="关于环境、插件"><a href="#关于环境、插件" class="headerlink" title="关于环境、插件"></a>关于环境、插件</h4><p>建博客的时候，都已经知道需要Node.js、Hexo、git、梯子、github帐号，但是使用 npm 安装插件时，即使使用了梯子加淘宝镜像 cnpm 加 yarn ，仍然有部分插件经常安装错误。直到我使用了 <strong>github</strong> 的 <strong>codespace</strong> ，我才发现原来使用 npm 安装插件没那么难， codespace 使用本地 <strong>VS Code</strong> 打开，与打开本地仓库几乎一样流畅，甚至不用配置ssh密钥，而且执行 <code>hexo deploy</code> 时，几乎不会因为连接不上报错，极力推荐。</p><h4 id="PWA"><a href="#PWA" class="headerlink" title="PWA"></a>PWA</h4><p>让 Hexo 支持 PWA 非常简单，但稍有不慎，真的可以采坑无数。</p><p>看了很多很多帖子，讲得最多的就是使用 hexo-pwa 插件，但是这个插件很久没更新了，仅支持 <a href="mailto:hexo@4.1.1">hexo@4.1.1</a> ，使用新版 hexo 请直接放弃 hexo-pwa</p><p>hexo-workbox 插件，这个中途试过一次没成功，不知道是不是版本问题。</p><p><strong>hexo-offline</strong> 插件，这个插件是最简单的，安装成功后零配置使用，我在 <strong><a href="mailto:hexo@6.3.0">hexo@6.3.0</a></strong> 上是成功使用的，但是在本地 <code>hexo s</code> 后浏览 <a href="http://localhost:4000/">http://localhost:4000/</a> 并不成功，前后尝试了好几天，才发现，原来就本地无效，在 <code>hexo deploy</code> 后在浏览器中打开 <strong>github</strong> 博客主页是有效的。<br>只需要在 <strong>git bash</strong> 中执行 <code>npm install hexo-offline</code> ，然后 <code>hexo cl&amp;&amp;hexo g&amp;&amp;hexo deploy</code> 三联就行了。</p><p>参考的部分教程：<br><a href="https://blog.naaln.com/2017/09/hexo-with-pwa/">让PWA支持HEXO</a></p><p><a href="http://syean.cn/2018/12/17/hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AEPWA/#%E5%AE%89%E8%A3%85hexo-pwa">Hexo博客配置PWA</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/Manifest">Web App Manifest</a></p><p><a href="https://www.wenjiangs.com/article/pwa-summary-of-practical-experience.html">PWA 实践经验小结</a></p><p><a href="https://www.oschina.net/p/jekyll-pwa">jekyll-pwa</a></p><p><a href="https://sitoi.cn/posts/49115.html">基于 Hexo GitHub 从零开始搭建个人博客（四）：让你的博客完美支持 PWA</a></p><h4 id="升级插件"><a href="#升级插件" class="headerlink" title="升级插件"></a>升级插件</h4><p>参见<a href="https://www.jianshu.com/p/802182c01b59">Hexo版本升级指南</a></p><h4 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h4><ol><li><p>域名申请，以我为例，打开<a href="https://buy.cloud.tencent.com/domain">腾讯云申请注册页面</a> ，按提示步骤输入意向域名并申请，期间需要实名认证，需要支付一定费用。</p></li><li><p>打开我的域名<a href="https://console.cloud.tencent.com/domain/all-domain">管理页面</a> ，移到最下面找到自己的域名并点进去<br><img src="/img/in-post/custom-hexo-blog/domain-1.jpg"></p></li><li><p>点击<strong>快速添加解析</strong><br><img src="/img/in-post/custom-hexo-blog/domain-2.jpg"></p></li><li><p>选择<strong>网站解析</strong>、<strong>域名映射（CNAME）</strong>，输入自己的 github 博客地址并确认。<br><img src="/img/in-post/custom-hexo-blog/domain-3.jpg"></p></li><li><p>打开博客仓库，依次点击 <strong>Settings</strong> 、 <strong>Pages</strong> ，找到 <strong>Custom domain</strong> ，输入自己的域名 <code>jupeiqi.top</code> ，保存<br><img src="/img/in-post/custom-hexo-blog/domain-4.jpg"></p></li><li><p>查看自己的仓库，根目录下新出现一个 <strong>CNAME</strong> 文件就成啦。如果没有，可以直接在跟目录里添加一个 <strong>CNAME</strong> ，注意没有后缀名，内容改为自己的域名 <code>jupeiqi.top</code> 。<br><img src="/img/in-post/custom-hexo-blog/domain-5.jpg"></p></li><li><p>接下来就可以直接使用新的域名来访问自己的博客了</p></li></ol><h4 id="配置腾讯云cdn"><a href="#配置腾讯云cdn" class="headerlink" title="配置腾讯云cdn"></a>配置腾讯云cdn</h4><p><a href="https://console.cloud.tencent.com/cdn/domains/add">添加域名</a><br><a href="https://cloud.tencent.com/product/ba">备案</a></p><h5 id="修改主页和菜单头部背景"><a href="#修改主页和菜单头部背景" class="headerlink" title="修改主页和菜单头部背景"></a>修改主页和菜单头部背景</h5><ul><li>打开 <strong>themes\hexo-theme-matery\source\medias\banner</strong> 文件夹，替换其中图片后，既可以更改主页头部背景图片，放入多张图片可以每日自动更换。</li></ul><h4 id="大菜单"><a href="#大菜单" class="headerlink" title="大菜单"></a>大菜单</h4><h5 id="豆瓣"><a href="#豆瓣" class="headerlink" title="豆瓣"></a>豆瓣</h5><p>参考自<a href="https://blog.csdn.net/qq_38157825/article/details/112783187">https://blog.csdn.net/qq_38157825/article/details/112783187</a></p><ol><li><p>安装 <strong>hexo-douban</strong> 插件，在博客目录的 <strong>Git Bash</strong> 中执行 <code>npm install hexo-douban --save</code></p></li><li><p>打开博客根目录下 <strong>_config.yml</strong> 文件，在最下面添加如下代码</p></li></ol><pre class="line-numbers language-none"><code class="language-none"># hexo-doubandouban:  id: 162448367 # 自己的豆瓣id号  book:    path: books/index.html    title: '那些年，我翻阅过的书'    quote: '思想和身体，总有一个在路上'  movie:    path: movies/index.html    title: '那些年，我追过的电影'    quote: '过去、现在、和未来'  game:    path: games/index.html    title: '那些年，我玩过的游戏'    quote: '还记得你曾经的游戏角色吗'  timeout: 10000 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><p>卸载豆瓣，执行<code>npm uninstall --save hexo-douban</code></p></li><li><p>在matery主题中，豆瓣有些问题，头部 <strong>在读 想读 已读</strong> 和底部翻页按钮点击时总是会跳转到一个空白页面，可以在 hexo-douban 插件目录中找到<strong>move.ejs、book.ejs、game、game.ejs、pagination.ejs</strong>，删除其中 <code>href="javascript:;</code> ，重新执行 <code>hexo douban</code> 即可。在 <strong>books-generator.js</strong> 文件中，更改 <code>layout: ['page', 'post']</code> ，可以重新选择一个自定义的模板来加载豆瓣数据。</p></li></ol><h4 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h4><h5 id="修改博文头部背景"><a href="#修改博文头部背景" class="headerlink" title="修改博文头部背景"></a>修改博文头部背景</h5><ul><li><p>打开 themes\hexo-theme-matery\source\medias\featureimages 文件夹，替换其中图片后，既可以更改博文头部背景图片，放入多张图片后，每个博文随机用其中一张。</p></li><li><p>也可以在文章头部 <strong>Front-matter</strong> 中,修改 <strong>img</strong> 值为指定图片的地址。（ <strong>coverImg</strong> 是设定文章在首页轮播时的背景图片）</p></li></ul><h5 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h5><ol><li><p>首先在主题的配置文件 <strong>themes\hexo-theme-matery_config.yml</strong> 中修改 <strong>verifyPassword</strong> 项， <strong>enable</strong> 值更改为 <strong>ture</strong></p><pre class="line-numbers language-none"><code class="language-none">verifyPassword:enable: truepromptMessage: 请输入访问本文章的密码errorMessage: 密码错误，将返回主页！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>然后准备好自己的密码，比如 <strong>123</strong> ，使用 <strong>sha256</strong> 加密解密工具，将 <strong>123</strong> 转换为对应的 <strong>sha256</strong> 值： <strong>a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3</strong> 备用。</p></li><li><p>打开自己的博文.md 文件，在文章头部 <strong>Front-matter</strong> 中,修改 <strong>passward</strong> 值为上一步准备的 <strong>sha256</strong> 值： <strong>a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3</strong> 。保存博文。</p></li><li><p>在构建到服务器后，在网站打开博文时，需要输入密码 <strong>123</strong> 才能查看。</p></li></ol><h5 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h5><ol><li><p>安装 <strong>hexo-simple-mindmap</strong> 插件，在博客目录的 <strong>Git Bash</strong> 中执行 <code>npm install hexo-simple-mindmap</code> </p></li><li><p>在<strong>文章.md</strong>文件中，按以下格式写入内容</p></li></ol>   <pre class="line-numbers language-none"><code class="language-none">{% pullquote mindmap mindmap-md %}- [Hexo 的思维导图插件](https://hunterx.xyz/hexo-simple-mindmap-plugin-intro.html)- 前言- 使用方法   - 一   - 二   - 三- 太长不看- 参考资料{% endpullquote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>在构建到服务器后，在网站打开博文时，就可以看到思维导图了。</li><li>如无法正确显示，看看是不是前面的空格少了</li></ol><h5 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h5><ol><li>安装 <strong>hexo-filter-flowchart</strong> 插件，在博客目录的 <strong>Git Bash</strong> 中执行 <code>npm install --save hexo-filter-flowchart</code> </li><li>安装好插件后就可以直接在<strong>文章.md</strong>文件中用代码块写流程图，并且在语言标识处写 <code>flow</code> ,</li></ol>   <pre class="line-numbers language-none"><code class="language-none">st=&gt;start: 开始节点in=&gt;inputoutput: 输入e=&gt;end: 结束节点op=&gt;operation: 操作节点cond=&gt;condition: 条件节点sub=&gt;subroutine: 子例程out=&gt;inputoutput: 输出st(right)-&gt;in-&gt;op-&gt;condcond(yes,right)-&gt;out-&gt;econd(no)-&gt;sub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>   <pre class="line-numbers language-none"><code class="language-none">st=&gt;start: 开始语句:&gt;https://www.baidu.comin=&gt;inputoutput: 输入值e=&gt;end: 结束语句op=&gt;operation: 执行操作cond=&gt;condition: 是否成立？out=&gt;inputoutput: 输出值st-&gt;in-&gt;op-&gt;condcond(yes)-&gt;outcond(no)-&gt;opout-&gt;e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   其中分为两个部分<br>    - 第一部分为指定缩写、节点内容， <strong>st in e op cond out</strong> 为指代缩写，冒号后中文为节点内填充内容（可以用 <code>:&gt;https://www.baidu.com</code> 来填入超链接），冒号和填充内容之间必须要有空格。<br>    - 第二部分为连接节点，用 <code>-&gt;</code> 连接，可以连续连接，条件节点需要换行写入两个连接，可以在括号内填入 <code>top</code> 、 <code>bottom</code> 、 <code>left</code> 、 <code>right</code> 指定<strong>上下左右</strong>的输出方向<br>   效果如下</p><div id="flowchart-0" class="flow-chart"></div><div id="flowchart-1" class="flow-chart"></div><h4 id="豆瓣卡片"><a href="#豆瓣卡片" class="headerlink" title="豆瓣卡片"></a>豆瓣卡片</h4><ol><li><p>安装 <strong>hexo-douban-card</strong> 插件，在博客目录的 <strong>Git Bash</strong> 中执行 <code>npm install hexo-douban-card --save</code></p></li><li><p>在文章中插入如下代码</p></li></ol><p><code>{% douban movie 24745500 %}</code></p><p><code>{% douban book 30376420 %}</code></p><p><code>{% douban music 35099703 %}</code></p><p>效果如下</p><div class="douban-card-block">    <a class="douban-card" href="https://movie.douban.com/subject/24745500">        <div bg-lazy="" class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/photo/s_ratio_poster/public/p2194066391.jpg');"></div>        <div class="douban-card-left">            <div bg-lazy="" class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img2.doubanio.com/view/photo/s_ratio_poster/public/p2194066391.jpg');"></div>            <div class="douban-card-status">灯影绰约</div>        </div>        <div class="douban-card-right">            <div class="douban-card-item"><span>电影名: </span><strong>绣春刀(2014)</strong></div>            <div class="douban-card-item"><span>导演: </span><span>路阳</span></div>            <div class="douban-card-item"><span>主演: </span><span>张震/刘诗诗</span></div>            <div class="douban-card-item"><span>上映时间: </span><span>2014-08-07(中国大陆)</span></div>            <div class="douban-card-item"><span>评分: </span><span>7.7</span></div>        </div>    </a></div><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/30376420">        <div bg-lazy="" class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s30015279.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy="" class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s30015279.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>一个人生活</strong></div>            <div class="douban-card-item"><span>作者: </span><span>[日]谷川俊太郎</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2019-3</span></div>            <div class="douban-card-item"><span>评分: </span><span>7.0</span></div>        </div>    </a></div><div class="douban-card-block"><a class="douban-card" href="https://music.douban.com/subject/35099703"><div bg-lazy="" class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/m/public/s33667479.jpg');"></div><div class="douban-card-left"><div bg-lazy="" class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/m/public/s33667479.jpg');"></div>            <div class="douban-card-status">余音绕梁</div>        </div><div class="douban-card-right"><div class="douban-card-item"><span>音乐名: </span><strong>María</strong></div><div class="douban-card-item"><span>表演者: </span><span>화사/华莎</span></div><div class="douban-card-item"><span>发行时间: </span><span>2020-06-30</span></div><div class="douban-card-item"><span>评分: </span><span>8.6</span></div></div></a></div><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=&gt;start: 开始节点in=&gt;inputoutput: 输入e=&gt;end: 结束节点op=&gt;operation: 操作节点cond=&gt;condition: 条件节点sub=&gt;subroutine: 子例程out=&gt;inputoutput: 输出st(right)-&gt;in-&gt;op-&gt;condcond(yes,right)-&gt;out-&gt;econd(no)-&gt;sub</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><textarea id="flowchart-1-code" style="display: none">st=&gt;start: 开始语句:&gt;https://www.baidu.comin=&gt;inputoutput: 输入值e=&gt;end: 结束语句op=&gt;operation: 执行操作cond=&gt;condition: 是否成立？out=&gt;inputoutput: 输出值st-&gt;in-&gt;op-&gt;condcond(yes)-&gt;outcond(no)-&gt;opout-&gt;e</textarea><textarea id="flowchart-1-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-1-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-1-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-1", options);</script><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快递小哥</title>
      <link href="/2022/11/19/express-delivery-boy/"/>
      <url>/2022/11/19/express-delivery-boy/</url>
      
        <content type="html"><![CDATA[<p>上班早高峰，一快递小哥，在十字路口，被交警拦了下来，闯红灯不带头盔，罚款二十元。</p><p>小哥领了罚单骑上车就走，骑到路中间，有点不甘，掏出罚单看看。</p><p>“嘭”的一身，一辆出租车撞了上来，小哥人仰车翻。</p><p>路边交警赶紧过来，任务二连，顺便给小哥叫了个 120。</p><p>小哥才干快递不久，到医院没钱付，还是等着老婆来才交了钱的。</p><p>这行当，天天在路上跑，不带头盔闯红灯，骑车不看路，迟早出事，好在今天是小事故，破点小财，受点小伤给自己长长记性。</p><p>小哥家里钱也管得太严了，手机里一百多块都没有，太可怕了。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 美丽心情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黄金四分钟</title>
      <link href="/2022/11/19/four-minutes/"/>
      <url>/2022/11/19/four-minutes/</url>
      
        <content type="html"><![CDATA[<p>据统计我国每年至少有60多万人发生猝死，而80%的猝死发生在院外。在我国院外心肺复苏抢救成功率仅只有1%，很多鲜活的生命往往就在黄金4分钟内离我们而去。</p><p>下面我请大家看两个猝死的案例，相信各位通过这两个案例可以有所启发。<br>案例1：高以翔<br>案例2：埃里克森</p><p>由以上两个案例我们可以对比一下，实践证明：4分钟内进行心肺复苏者，可能50%被救活，如及时使用AED这个机率将会提高到75%左右。随着时间的推移，成功机率也会大幅度下降，若超过10分钟存活率几乎为0。</p><p>被誉为“全球第一救命技术”的心肺复苏术，它其实很简单，仅仅只需用两只手，就能最大程度地挽救生命。但遗憾的是，这一简单易学的技术未能在我国得到普及，导致其发挥的作用有限。老百姓没学过，也不敢现场实施急救是主要原因。所以全民普及心肺复苏势在必行，现在我们救人也有法律保障无需顾虑。当发现有人倒地，四分钟之内医护人员不可能到达第一现场，那么在急救人员到来之前，第一目击者及时进行心肺复苏是成功救活院外心脏骤停者的最重要因素。如果第一目击者对院外心脏骤停者进行了及时的心肺复苏，将会使存活率提高1倍以上，所以黄金四分钟尤为重要。全民必须要从第一目击者必须转变为第一反应者，积极施救、规范施救。</p><p>当我们遇见猝死，并不是束手无策；更不能坐以待毙，因为我们有两样武器可以阻击猝死，第一件武器是：心肺复苏，第二件武器是AED(自动体外除颤仪）。<br>今天我们就简单了解一下这两件武器如何使用：心肺复苏步骤：1:判断环境是否安全、2:判断有无意识（轻拍患者双肩并在两侧耳边大声呼唤）、3:请周围人员拨打120拿最近的AED、4:将患者置于硬质地面解开上衣判断呼吸脉搏、5:胸外按压（两乳头连线中点、肘关节伸直垂直下按、5-6厘米、100-120次每分钟······）、6:开放气道（仰头抬颌法）、7:人工呼吸（30:2）、8:复检；其中胸外按压尤为重要，一个高质量的心肺复苏就是靠按压来完成的，按压中断的时间一定不可以超过10秒。</p><p>AED （自动体外除颤仪，救命神器）。它是给没有医学背景的民众来使用的。当我们发现有人倒地就可以去最近的地方取得AED用来挽救生命。使用步骤：1.打开电源（语音提示） 2.按图示贴电极片（正确贴牢即可）3.插上插头（请周围人不要触碰病人以免影响判断）4.按除颤按钮（按下按钮前要提醒周围人员离开）。</p><p>关爱生命“救”在身边</p><p>路遇他人意识涣，<br>环境安全直接按，<br>按完不忘吹两吹，<br>四步除颤把命还。 </p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 科普 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>芳强故事</title>
      <link href="/2022/11/15/fangqiang-story/"/>
      <url>/2022/11/15/fangqiang-story/</url>
      
        <content type="html"><![CDATA[<p>强子跟阿芳结婚好几年了，小孩也两三岁了，但是两人关系却越来越疏远。</p><p>强子在阿芳手机里装了监控软件。</p><p>今天一大早，强子就约上刚子偷偷跟着阿芳从成都飞到了江都。</p><p>阿芳终于在一家挺高级的宾馆住了下来。是小王早就定好的房间，小王住在隔壁市，一大早就来这儿开好房间等她。</p><p>晚上，强子算准时机，与刚子一起，破门而入，录视频，打 110。捉奸在床，人证物证俱全。</p><p>阿芳感受到莫大的耻辱，直接冲向窗边，想破窗跳楼，奈何宾馆的窗户非常结实。</p><p>跳窗不成，不知哪里掏出来的刀，对着手腕狠狠划了下去，鲜血直流。</p><p>小王吓坏了，赶紧夺下刀，按住阿芳伤口。</p><p>强子刚子也怕事闹大，赶紧退出房间。不一会儿，120，110 赶到现场，阿芳已经披上了外套。护士给阿芳手上包扎好，建议她跟 120 去医院再缝合一下。阿芳答应，但要求换衣服。</p><p>除了小王和阿芳，所有人都退出了房间。</p><p>强子也不避讳，将情况跟警察 120 全说了下，就是上面的故事了。</p><p>不久，小王将阿芳扶出。阿芳还是穿的原来那件外套，但是里面多了件衣服。</p><p>去医院的路上，强子和阿芳吵嘴不断。</p><p>“你又录视频又报警的，不就是要钱吗，告诉你不可能的。”</p><p>“我是为了抚养权”</p><p>“你不就懂点法吗，你不就有个律师朋友吗，你身边女人就没断过”</p><p>“我女人没断过，我什么工作你不知道呀”</p><p>“你天天冷落我，是不是就是为了逼我犯错，等这一天来报复我”</p><p>“我冷落你？你看你们家是怎么看我怎么待我的”</p><p>“你都坐过牢的，还能怎么看你”</p><p>…</p><p>…</p><p>吵到医院消停了。</p><p>瓜就吃到这儿了。</p><p>后续估计就是离婚官司，强子分到了抚养权和大部分婚后财产。</p><p>强子面相挺好看，工作可能是哪个夜店少爷，不然还有什么可能既缺钱又能身边女人不断？进去过，既经历过警察面对面教诲，又有律师朋友指导，还先阴到了女方背叛婚姻的证据，本身就不是什么好鸟。</p><p>阿芳漂亮，但蠢笨，选择嫁给了个有钱科的少爷，手机被监控浑然不觉，有了婚姻也不好好经营，甚至出行千里出轨，可怜人一堆可恨之处。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 吃瓜日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好人</title>
      <link href="/2022/11/12/good-guys/"/>
      <url>/2022/11/12/good-guys/</url>
      
        <content type="html"><![CDATA[<p>我很喜欢一种人，他们天生喜欢管“闲事”，随便在哪里遇到别人可能需要帮助的，总会毫不犹豫的冲上前，但是他们充满热情，把自己的时间精力奉献给身边的人，即使有时候他们会把别人弄得哭笑不得，有时候因为不专业帮了倒忙，我仍然心存感激，感谢他们让我们的世界充满光。</p><p>我也很讨厌一种人，爱管闲事却不负责任的人。<br>他们有的看到路人倒在路边就立马打110、120，连地址都说不清，连路人是否需要帮助也不了解清楚，然后就迅速离开现场，110、120现场找不到人打他电话核实情况，他还来一句：你们怎么老打我电话，我只是路人，以后再也不打这种电话了。<br>有的看到别人现场施救需要帮助，在那里拿手机拍视频发抖音指手画脚，别人请他来帮忙抬一下，他说：我又不是专业的，我不会。<br>这些人可能有时候还跟别人吹在哪里哪里自己做了好人好事，仅仅是见证了，就把别人的事迹标榜到自己头上，殊不知自己没帮任何忙，还过度的占用了公共资源，影响了别人做有意义的事。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 美丽心情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>secondary hospitals-stg</title>
      <link href="/2022/11/12/secondary-hospitals-stg/"/>
      <url>/2022/11/12/secondary-hospitals-stg/</url>
      
        <content type="html"><![CDATA[<h3 id="Why-here"><a href="#Why-here" class="headerlink" title="Why here"></a>Why here</h3><p>13年7月，正式从国内某不知名医学院毕业，简历投了很多，中了个把，无一例外，均在他乡。<br>想在决定去处之前，回家听听家里人想法。</p><p>家里帮我安排了一切，安排的工作是离老家几里地的乡镇卫生院，那是我出生的地方，很小，大二见习也去待过几天，与自己找的工作差距很大。我不想去。</p><p>妈妈又帮我找了稍远点儿的乡镇卫生院，稍大了一些。仍然没有提起我一点儿兴趣。</p><p>我想去武汉，想去上海。但妈妈不同意。</p><p>此非我所愿，彼非你所愿。</p><p>妈妈跟我说了很多话，我心里很烦，啥也没听进去。</p><p>但是妈妈哭了，我被妈妈的眼泪挽留了下来。</p><h3 id="What-to-do"><a href="#What-to-do" class="headerlink" title="What to do"></a>What to do</h3><p>还是7月，光速入职卫生院，编外。</p><p>见过院长，医院正在创建二级医院，院长将我安排在院办，帮忙整理创建材料。</p><p>我发现我有些技能非常适合在这院办工作：电子文档排版、制作各种证书、制作课件、制作公文台账等等，反正就是去哪个医院学习后带回来台账资料，或者网络上搜罗下来的资料，内容格式修改下变成自己的就行了。</p><p>年底，医院顺利通过审核，升级成为二级医院。</p><p>工作虽然得心应手，但是工资一点都不美丽，只有1400每月！而且没交社保！</p><p>9月份有过一次考编机会，之前周围的人告诉过我，很好考的，去年全区招15个医生岗位，12个报名，全上。轮到我报名时，还是12个人报名，但是岗位只有3个。这是我第一感觉到社会如此之卷。学渣不努力，落选意料之中。</p><p>我开始有了危机感，开始每天复习专业知识。沉迷学习让我心情得到片刻宁静。但是每月一次的1400让我愈来愈烦躁。同一个医院，人没有贵贱之分，但是有编内编外之分，有钱多钱少之分。我越来越没耐心再等到下一个9月。</p><h3 id="Where-to-go"><a href="#Where-to-go" class="headerlink" title="Where to go"></a>Where to go</h3><p>14年春，我开始经常请假去外地考编。请假不方便，我干脆瞒着家里辞职了。报考的地方有点多，广撒网之下，还是有点效果的，收到了几家入职通知。诸多对比后选了家苏南小镇卫生院，正式开始端上了铁饭碗，吃上了体制饭。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 美丽心情 </tag>
            
            <tag> 从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 从入门到放弃</title>
      <link href="/2022/11/11/hexo-stg/"/>
      <url>/2022/11/11/hexo-stg/</url>
      
        <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>折腾完Jekyll，看了好多Jekyll模版博客，感觉基本上都挺简洁的。再看看几个Hexo模版博客，感觉好骚呀，那就搞一个吧。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>新装Windows11系统（Windows Sandbox）,不做任何花里胡哨的优化。</p><p>用到的东西：</p><ul><li>必要：Node.js、Hexo、git、梯子、github帐号</li><li>可选：Microsoft Visual Studio、GitHub Desktop</li></ul><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>首先安装 <strong>Node.js</strong> ，打开<a href="https://nodejs.org/zh-cn/download/">Node.js</a> 下载页面，选择<strong>Windos安装包</strong>，我下载的版本是<a href="https://nodejs.org/dist/v18.12.1/node-v18.12.1-x64.msi">node-v18.12.1-x64.msi</a><br><img src="/img/in-post/hexo-stg/Node.js-1.jpg"></p><p>打开刚下载下来的 <strong>node-v18.12.1-x64.msi</strong> 文件，点 <strong>next</strong> 后同意条款，然后一路点击 <strong>next</strong> ，直至读条结束完成安装点击 <strong>Finish</strong> ，Node.js 就算安装完成啦。<br><img src="/img/in-post/hexo-stg/nodejsgif-1.gif"></p><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>接下来安装 <strong>git</strong> ，打开你 <a href="https://git-scm.com/download/win">git</a> 下载页面，点 <a href="https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/Git-2.38.1-64-bit.exe">Click here to download</a> 下载。<br><img src="/img/in-post/hexo-stg/git-1.jpg"></p><p>打开刚下载下来的 <strong>Git-2.38.1-64-bit.exe</strong> ，一路点 <strong>next</strong><br>，读条结束点击 <strong>Finish</strong> ，git 就算安装完成啦。<br><img src="/img/in-post/hexo-stg/gitgif-1.gif"></p><h3 id="搭建blog"><a href="#搭建blog" class="headerlink" title="搭建blog"></a>搭建blog</h3><p>在开始菜单中找到刚安装好的 <strong>Git Bash</strong>（<strong>Node.js command prompt</strong>也可以） ，输入 <code>node -v</code> 和 <code>git -v</code> 看看刚才的 nodejs 和 git 是否成功安装吧。成功安装的话，会显示已安装的版本。<br><img src="/img/in-post/hexo-stg/myblog-1.jpg"></p><p>接下来安装 <strong>Hexo</strong> ，输入 <code>npm install -g hexo-cli</code><br><img src="/img/in-post/hexo-stg/myblog-3.jpg"></p><p>输入 <code>hexo -v</code> 看到下图，就表示安装成功啦。<br><img src="/img/in-post/hexo-stg/myblog-4.jpg"></p><p>输入 <code>hexo init myblog</code> 新建名为blog的原生博客模板<br><img src="/img/in-post/hexo-stg/myblog-5.jpg"></p><p>输入 <code>cd myblog</code> 进入myblog文件夹<br><img src="/img/in-post/hexo-stg/myblog-6.jpg"></p><p>输入 <code>npm install</code> 安装博客依赖的包<br><img src="/img/in-post/hexo-stg/myblog-7.jpg"></p><p>输入 <code>hexo generate</code>（或者<code>hexo g</code>） 构建新建的博客<br><img src="/img/in-post/hexo-stg/myblog-8.jpg"></p><p>输入 <code>hexo serve</code>（或者<code>hexo s</code>） 将构建好的博客模板部署到本地服务器中<br><img src="/img/in-post/hexo-stg/myblog-9.jpg"></p><p>浏览器打开 <a href="http://localhost:4000/">http://localhost:4000</a> 就可以本地浏览新建好的博客啦<br><img src="/img/in-post/hexo-stg/myblog-10.jpg"></p><p>结束记得在 <strong>Git Bash</strong> 中按下 <strong>ctrl + c</strong> 退出本地服务</p><h3 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h3><p>接下来我们就要将这个原生的博客部署到 Github 上，以便在网络中浏览。</p><p>首先注册号 Github 账号，记下 GitHub 账户用户名和邮箱。</p><p>进入 Github 主页，创建名为 <strong>用户名.github.io</strong>（例如我的仓库： <strong>jupeiqi.github.io</strong> ） 的公共仓库<br><img src="/img/in-post/hexo-stg/myblog-22.jpg"></p><p>打开新建好的仓库，记下 <strong>HTTPS</strong> 地址： <strong><a href="https://github.com/jupeiqi/jupeiqi.github.io.git">https://github.com/jupeiqi/jupeiqi.github.io.git</a></strong> ，这就是自己的仓库地址<br><img src="/img/in-post/hexo-stg/myblog-23.jpg"></p><p>返回 <strong>Git Bash</strong> ，配置 git 的 Github 账户信息，输入 <code>git config --global user.name "jupeiqi"</code> 按回车，接着输入 <code>git config --global user.email "xiaojupeiqi@foxmail.com"</code> 按回车，没有提示任何消息就是好消息。（引号内的用户名和邮箱账号记得换成自己的）<br><img src="/img/in-post/hexo-stg/myblog-12.jpg"></p><p>输入 <code>ssh-keygen -t rsa -C "xiaojupeiqi@foxmail.com"</code> 后连按几次 <strong>Enter</strong> 键，直到看到下图<br><img src="/img/in-post/hexo-stg/myblog-14.jpg"></p><p>打开电脑文件夹 <strong>C:\Users\用户名.ssh</strong> ，可以看到刚生成的两个文件<br><img src="/img/in-post/hexo-stg/myblog-15.jpg"></p><p>用记事本打开 <strong>id_rsa.pub</strong> ，复制其中所有内容<br><img src="/img/in-post/hexo-stg/myblog-16.jpg"></p><p>浏览器打开 <a href="https://github.com/">Github</a> 主页，点击右上角个人头像，点击Settings<br><img src="/img/in-post/hexo-stg/myblog-17.jpg"></p><p>点击左侧 <strong>SSH and GPG keys</strong> ，点击 <strong>New SSH key</strong><br><img src="/img/in-post/hexo-stg/myblog-18.jpg"></p><p>在 <strong>Title</strong> 下随便输入，在 <strong>Key</strong> 下将刚才复制的内容全部粘贴进去，然后点 <strong>Add SSH key</strong><br><img src="/img/in-post/hexo-stg/myblog-19.jpg"></p><p>可以看到如下界面<br><img src="/img/in-post/hexo-stg/myblog-20.jpg"></p><p>我们返回 <strong>GIt Bash</strong> ，输入 <code>ssh -T git@github.com</code> ，看到如下界面，git 和 github 就算连上啦<br><img src="/img/in-post/hexo-stg/myblog-21.jpg"></p><p>打开 <strong>myblog</strong> 目录，找到 <strong>_config.yml</strong> 文件，这是博客的配置文件，用记事本打开，找到 <strong>deploy:</strong> 这一段，将其中 <strong>repo</strong> 值更改为自己的仓库地址， <strong>type</strong> 值改为 <code>git</code><br><img src="/img/in-post/hexo-stg/myblog-24.jpg"></p><p>回到 <strong>GIt Bash</strong> ，输入 <code>npm install hexo-deployer-git --save</code> 安装 <strong>hexo-deployer-git</strong> 插件<br><img src="/img/in-post/hexo-stg/myblog-25.jpg"></p><p>输入 <code>hexo deploy</code> （或者 <code>hexo d</code>） ，将博客部署到github上<br><img src="/img/in-post/hexo-stg/myblog-26.jpg"></p><p>首次部署会弹窗网页登陆验证，直接点 <strong>Sign in with your browser</strong> ，然后看到 <strong>Authentication Succeeded</strong> 就算验证通过了<br><img src="/img/in-post/hexo-stg/myblog-27.jpg"><br><img src="/img/in-post/hexo-stg/myblog-28.jpg"></p><p>片刻后，我们打开浏览器，输入 <code>https://github.com/jupeiqi/jupeiqi.github.io</code> ，进入到自己的仓库，可以看到刚上传进来的网页源文件<br><img src="/img/in-post/hexo-stg/myblog-29.jpg"></p><p>依次点 <strong>Settings</strong> 、 <strong>Pages</strong> ，<strong>Branch</strong> 下的 <strong>None</strong> 更改为 <strong>master</strong> ，点 <strong>Save</strong> 保存<br><img src="/img/in-post/hexo-stg/myblog-30.jpg"></p><p>等待5分钟后，浏览器输入 <strong>jupeiqi.github.io</strong> 就可以在网上看到自己的博客啦<br><img src="/img/in-post/hexo-stg/myblog-31.jpg"></p><h3 id="使用-github-上别人的主题模板"><a href="#使用-github-上别人的主题模板" class="headerlink" title="使用 github 上别人的主题模板"></a>使用 github 上别人的主题模板</h3><p>原生的博客模板还是挺素的，在知乎，搜索 <strong>Hexo模板</strong> 我们可以看到很多非常洋气的主题模板，随便挑一个吧 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">blinkfox</a> 点链接，直接下载下来。打开刚下载的 <strong>hexo-theme-matery-master.zip</strong> 主题文件，解压到 <strong>myblog</strong> 文件夹下的 <strong>themes</strong> 文件夹中，然后记事本打开 <strong>_config.yml</strong> 文件，将 <strong>theme：</strong> 后的值改为 <code>hexo-theme-matery</code> 后保存。<br><img src="/img/in-post/hexo-stg/myblog-37.jpg"></p><p>打开  <strong>GIt Bash</strong> ，依次执行 <code>hexo clean</code> ， <code>hexo g</code> ， <code>hexo s</code> ，浏览器打开 <a href="http://localhost:4000/">http://localhost:4000</a> ，就可以看到自己的博客一下子就变洋气啦<br><img src="/img/in-post/hexo-stg/blinkfox-7.jpg"></p><p>返回 <strong>Git Bash</strong> 中按下 <strong>ctrl + c</strong> 退出本地服务，执行 <code>hexo d</code> 将这洋气的博客部署到 github 上，等待5分钟后，就可以在网上输入 <code>jupeiqi.github.io</code> 查看啦</p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><ul><li><p>用 <strong>npm install</strong> 安装包时，连接不上，可以尝试使用淘宝代理cnpm镜像。输入 <code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code> 这个命令，安装完成之后，使用 <strong>cnpm</strong> 来安装包就可以啦，比如安装 <strong>Hexo</strong> 输入 <code>cnpm install -g hexo-cli</code> 。安装 <strong>hexo-deployer-git</strong> 输入 <code>cnpm install hexo-deployer-git --save</code> 。</p></li><li><p>部署到 github 上后仍然无法打开个人博客主页，可以检查下自己建的仓库是否为公共仓库， <strong>Pages</strong> 是否是从 <strong>master</strong> 主分支上构建。</p></li><li><p>使用 <code>hexo d</code> 命令部署博客到 <strong>github</strong> 上时，总是失败，可以检查下 <strong>.ssh</strong> 文件夹下密钥文件是否和 github 配对，电脑中是否登录过其他的 github 账号，如是，可以打开 <strong>控制面板&gt;&gt;用户账户&gt;&gt;管理 Windows 凭据&gt;&gt; Windows 凭据&gt;&gt;普通凭据</strong>，删除其中 <strong>git:<a href="https://github.com/">https://github.com</a></strong> 后重新 <a href="#toc-heading-6">配置 git 的 Github 账户信息</a></p></li><li><p>删除博文重新构建部署后，网页上仍然可以看到删除的博文，可以执行一遍 <code>hexo clean</code> 再重新构建部署后看看。</p></li></ul><h3 id="定制博客"><a href="#定制博客" class="headerlink" title="定制博客"></a>定制博客</h3><ul><li><p>很多定制内容，可以看主题原作者 <a href="https://github.com/blinkfox">blinkfox</a> 的 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">说明文档</a> 。深度定制博客，可以仔细阅读 <a href="https://hexo.io/zh-cn/docs/index.html">Hexo的官方文档</a>。</p></li><li><p>标题、副标题、 logo 等信息,可以在 <strong>myblog</strong> 目录下的 <strong>_config.yml</strong> 中修改。主页上其他信息，很多可以在 <strong>myblog\themes\hexo-theme-matery_config.yml</strong> 中修改。</p></li><li><p>留言板，国内可用的免登录的评论系统，<a href="https://valine.js.org/">valine</a>，看上去挺不错的，可以尝试以下。</p></li><li><p>新建菜单，如果我要创建一个<strong>放松</strong>的菜单，在<strong>放松</strong>下面添加<strong>音乐</strong>、<strong>电影</strong>、<strong>书籍</strong>、<strong>游戏</strong>4个子菜单，那么先在主题配置文件 <strong>_config.yml</strong> 的 <strong>menu</strong> 下面添加菜单项，如下。</p>  <pre class="line-numbers language-none"><code class="language-none">menu:  首页:url: /icon: fas fa-home  放松:url: /relaxicon: fas fa-mug-hotchildren:  - name: 音乐url: /musicicon: fas fa-music  - name: 电影url: /moviesicon: fas fa-film  - name: 书籍url: /booksicon: fas fa-book  - name: 游戏url: /gamesicon: fas fa-gamepad<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  在 <strong>themes\hexo-theme-matery\layout</strong> 文件夹下添加 <strong>relax</strong> 文件夹，在 <strong>relax</strong> 中添加 <strong>index.md</strong> 文件，文件内容修改为</p>  <pre class="line-numbers language-none"><code class="language-none">---title: relaxdate: 2022-11-22 14:39:14type: "relax"layout: "relax"---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  在 <strong>themes\hexo-theme-matery\layout</strong> 文件夹中添加 <strong>relax.ejs</strong> 文件，在  <strong>relax.ejs</strong> 文件中写入当前菜单页的信息<br>  子菜单为同样的方法创建文件</p></li><li><p>写博文，可以在 <strong>Git Bash</strong> 中用 <code>hexo new [layout] &lt;title&gt;</code> 命令来写博客，比如 <code>hexo new post Hexo-stg</code> （如果标题中含有空格，需要给标题加上引号，post是可以省略的）之后，我们就可以在 <strong>source_posts</strong> 下看到名为 <strong>2022-11-11-Hexo-stg.md</strong> 刚创建好的博客，打开后，就可以在里面尽情的书写了。在 <strong>_config.yml</strong> 文件中 <strong>post_asset_folder</strong> 值改为 <strong>true</strong> ，那么在控制台创建博客时，会同时在 <strong>_post</strong> 文件夹中创建一个同名的文件夹，我们可以把博客已用的资源放在这个文件夹中方便管理。也可以设置使用其他布局来写博客，如 <code>hexo new game 旷野之息</code> ，当然需要先在 <strong>themes\hexo-theme-matery\layout</strong> 中做好game布局文件。</p></li><li><p><code>hexo new page relax</code> 会在  <strong>source</strong>  中创建一个单纯的名为 <strong>relax</strong> 的页面，可以配合创建菜单使用</p></li></ul><h3 id="Hexo-VS-Jekyll"><a href="#Hexo-VS-Jekyll" class="headerlink" title="Hexo VS Jekyll"></a>Hexo VS Jekyll</h3><p>刚开始尝试 Jekyll 搭建博客，是因为其方便、快捷、容易上手，尝试 Hexo 完全是因为看到太多好看的博客主题模板都是用 Hexo 搭建的。</p><p>两个使用下来，感觉 Jekyll 确实用起来更顺手些，新写博文本地预览时，不用重新构建，网页刷新以下就可以了，首次部署到网站后，每次写博文，只要在 _post 文件夹中上传 md文件就可以了，不需要额外的构建，甚至在手机网页上直接写好保存就可以直接浏览了，非常适合自己写笔记、日志、随想。</p><p>相比 Jekyll ， Hexo 发博文就麻烦一些了，每次写好，要放到 _post 文件夹中，然后要执行 hexo 的清理、构建、部署才能完成，而且有时候，构建、部署真的很慢，离开电脑基本就搞不定了。但是 Hexo 上有非常丰富的插件、主题，奈何有时候，人就是喜欢一些华而不实的东西。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 从入门到放弃 </tag>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jekyll 从入门到放弃</title>
      <link href="/2022/11/03/2022-11-3-jekyll-stg/"/>
      <url>/2022/11/03/2022-11-3-jekyll-stg/</url>
      
        <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>想自建个博客玩玩，这在非计算机专业的牛马当中应该是件相当酷 awesome 的事情了。</p><p>在网上看了好多攻略，感觉就在 github 上用 jekyll 建一个是最简单的事了。真的开搞后，觉得好难呀，以前玩过的唯一能跟博客搭点边的就是 QQ 空间了，但是在 github 上似乎比开通个 QQ 空间要难上许多许多。我觉得我有必要再把这流程再梳理一遍，做一个真·保姆级别的教程，来给同样零计算机基础的同学填填坑，也为了自己下次重新上手 Jekyll 时，同坑不踩二遍。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>首先的首先，要做一些准备工作，用 Jekyll 搭建一个博客，很多都是推荐在 Linux 系统上进行的，但我这门外汉只会用 WIndows 系统，又不是不能用🐶。在我第一次尝试时，遇到了诸多问题，导致我要么软件安装失败，要么各种包安装失败，要么服务器连接不上，有一部分原因是我的电脑被做过一些优化、很多服务要么被关要么被卸，注册表也被修改得一地鸡毛，所以在失败若干次后，我将自己的电脑初始化重新安装系统，系统是 <strong>Windows11</strong>。在新系统中，仅仅关闭了 <strong>SysMain</strong> 、 <strong>Windows Search</strong> 、 <strong>Windows 推送通知系统服务</strong> 三个服务，想把 <strong>Windows Defender</strong> 也关闭，但是关闭之后系统很多功能总是罢工，所以就一直留着了。系统准备好了，还需要准备梯子，因为 github 没梯子很不稳定，梯子就需要自备了，好像讲太多要被请去喝茶😒。 </p><p>初始化的 <strong>Windows11</strong> 、梯子准备完毕。</p><h3 id="安装-Jekyll-RubyGems"><a href="#安装-Jekyll-RubyGems" class="headerlink" title="安装 Jekyll RubyGems"></a>安装 Jekyll RubyGems</h3><p>首先来安装 <strong>Jekyll RubyGems</strong> ，打开 <a href="https://jekyllrb.com/docs/installation/">Jekyll RubyGems</a>  的下载页面 （<a href="https://jekyllrb.com/docs/installation/%EF%BC%89">https://jekyllrb.com/docs/installation/）</a></p><p>点击 <a href="https://jekyllrb.com/docs/installation/windows/">Windows</a><br><img src="/img/in-post/jekyll-stg/install-1.jpg"></p><p>点击 <a href="https://rubyinstaller.org/downloads/">RubyInstaller Downloads</a><br><img src="/img/in-post/jekyll-stg/install-2.jpg"></p><p>点击 <a href="https://github.com/oneclick/rubyinstaller2/releases/download/RubyInstaller-3.1.2-1/rubyinstaller-devkit-3.1.2-1-x64.exe">Ruby+Devkit 3.1.2-1 (x64)</a>就开始下载啦<br><img src="/img/in-post/jekyll-stg/install-3.jpg"></p><p>点击 <strong>另存为</strong>，存到自己想存的地方，然后打开 <strong>rubyinstaller-devkit-3.1.2-1-x64.exe</strong> ；或者直接<strong>打开</strong>也可以。<br><img src="/img/in-post/jekyll-stg/install-4.jpg"></p><p>进入到安装 ruby 和 devkit 的安装环节，依次点击 <strong>I accept the Licence</strong>、<strong>Next</strong><br><img src="/img/in-post/jekyll-stg/install-5.jpg"></p><p>路径用默认的不改， <strong>Add Ruby executables to your PATH</strong> 和 <strong>Associate .rb and .rbw files with this Ruby installation</strong> 保持✔，点 <strong>Install</strong><br><img src="/img/in-post/jekyll-stg/install-6.jpg"></p><p><strong>Ruby Ri and HTML documentation</strong> 和 <strong>MSYS2 development toolchain 2002-04-19</strong> 都打上✔，然后点 <strong>Next</strong><br><img src="/img/in-post/jekyll-stg/install-7.jpg"></p><p>然后就要经历一小会儿的安装读条时间<br><img src="/img/in-post/jekyll-stg/install-8.jpg"></p><p>读条完毕， <strong>Run ‘ridk install’ to set up MSYS2 and development toolchain</strong> 保持打勾，点击 <strong>Finish</strong><br><img src="/img/in-post/jekyll-stg/install-9.jpg"></p><p>安装完成啦，而且自动打开了 Ruby 的命令行窗口<br><img src="/img/in-post/jekyll-stg/install-10.jpg"></p><p>在打开的的 <strong>Ruby命令行</strong>窗口里直接按 <strong>Enter</strong> ，等待片刻，出现下图Jekyll RubyGems就算是安装成功啦<br><img src="/img/in-post/jekyll-stg/install-11.jpg"></p><h3 id="折腾-Jelyll"><a href="#折腾-Jelyll" class="headerlink" title="折腾 Jelyll"></a>折腾 Jelyll</h3><p>下面就进入到 Jekyll 的折腾环节了，关闭之前命令行窗口，在开始菜单里找到 <strong>Start Command Prompt with Ruby</strong> 并打开<br><img src="/img/in-post/jekyll-stg/jekyll-1.jpg"></p><p>输入 <code>gem install bundler</code> 按下 <strong>Enter</strong> ，等待片刻出现下图<br><img src="/img/in-post/jekyll-stg/jekyll-2.jpg"></p><p>输入 <code>bundle init</code> 按下 <strong>Enter</strong> ，等待片刻出现下图<br><img src="/img/in-post/jekyll-stg/jekyll-3.jpg"></p><p>输入 <code>bundle install</code> 按下 <strong>Enter</strong> ，等待片刻出现下图<br><img src="/img/in-post/jekyll-stg/jekyll-4.jpg"></p><p>输入 <code>gem install jekyll bundle</code> 按下 <strong>Enter</strong> ，等待很久很久出现下图<br><img src="/img/in-post/jekyll-stg/jekyll-5.jpg"></p><p>至此，跟 Jekyll 所有的工作就算完成啦。</p><h3 id="快速生成-Jekyll-模板"><a href="#快速生成-Jekyll-模板" class="headerlink" title="快速生成 Jekyll 模板"></a>快速生成 Jekyll 模板</h3><p>下面我们就来使用下 Jekyll 自带的模板吧<br>输入 <code>jekyll new blog</code> 按下 <strong>Enter</strong> ，生成一个示例博客模板<br><img src="/img/in-post/jekyll-stg/example-1.jpg"></p><p>输入 <code>cd blog</code> 按下 <strong>Enter</strong> ，进入新生成的 blog 目录<br><img src="/img/in-post/jekyll-stg/example-2.jpg"></p><p>再次输入 <code>bundle install</code> ，按下 <strong>Enter</strong> ，等待许久后出现下图<br><img src="/img/in-post/jekyll-stg/example-3.jpg"></p><p>输入 <code>bundle exec jekyll serve</code> ，按下 <strong>Enter</strong> ，生成本地服务器来预览自己的blog，当出现下图时，一个本地服务器版的Jekyll模板就算完成啦<br><img src="/img/in-post/jekyll-stg/example-4.jpg"></p><p>下面我们打开浏览器，输入网址 <a href="http://127.0.0.1:4000/">http://127.0.0.1:4000/</a> 看看效果<br><img src="/img/in-post/jekyll-stg/example-5.jpg"></p><p>一个非常简洁的本地版个人博客就算搭建完成了。</p><h3 id="使用-github-上别人的模板"><a href="#使用-github-上别人的模板" class="headerlink" title="使用 github 上别人的模板"></a>使用 github 上别人的模板</h3><p>网上可以搜到很多漂亮的Jekyll模板网站， <a href="http://jekyllthemes.org/">Jekyll Themes</a>收录的更多，可以慢慢挑。我也尝试了好些个，但是不同的Jekyll 模板经常让我遇到不同的、难以解决的问题，所以我就挑了一个比较成熟，几乎没有什么困难就跑起来的模板： <a href="https://huxpro.github.io/">Hux Blog</a>。</p><p>首先将他的博客模板下载下来，打开他的博客对应的仓库 <a href="https://github.com/Huxpro/huxpro.github.io">https://github.com/Huxpro/huxpro.github.io</a> ，依次点击 <strong>Code</strong>、**<a href="https://codeload.github.com/Huxpro/huxpro.github.io/zip/refs/heads/master">Download ZIP</a>** 下载完整的博客模板<br><img src="/img/in-post/jekyll-stg/hux-1.jpg"></p><p>打开下载下来的压缩文件  <strong>huxpro.github.io-master.zip</strong> ，将  <strong>huxpro.github.io-master</strong>  复制到想要的位置，这里我复制到 <strong>C:\Users\WDAGUtilityAccount</strong> ，和之前生成的 <strong>blog</strong> 模板在同一个文件夹中。打开 <strong>C:\Users\WDAGUtilityAccount\huxpro.github.io-master</strong> 文件夹，我们可以看到如下所示目录文件<br><img src="/img/in-post/jekyll-stg/hux-2.jpg"></p><p>关闭之前Ruby命令行窗口，重新打开 <strong>Start Command Prompt with Ruby</strong> ，输入 <code>cd huxpro.github.io-master</code> ，按下 <strong>Enter</strong><br><img src="/img/in-post/jekyll-stg/hux-3.jpg"></p><p>输入 <code>bundle install</code> ，按下 <strong>Enter</strong> ，等待许久出现下图<br><img src="/img/in-post/jekyll-stg/hux-4.jpg"></p><p>输入 <code>bundle exec jekyll serve</code> ，按下 <strong>Enter</strong> ，生成本地服务器来预览下载的Jekyll博客模板<br><img src="/img/in-post/jekyll-stg/hux-5.jpg"></p><p>下面我们打开浏览器，输入网址 <a href="http://127.0.0.1:4000/">http://127.0.0.1:4000/</a> 就可以看到这个精美的博客啦<br><img src="/img/in-post/jekyll-stg/hux-6.jpg"></p><p>下一步就是把别人模板上的信息替换成自己的，把它打造成自己的博客，用记事本或者自己习惯使用的文本编辑器打开  <strong>C:\Users\WDAGUtilityAccount\huxpro.github.io-master</strong>  文件夹下的配置文件 <strong>_config.yml</strong> ，将信息修改为自己的，比如将 <code>title: Hux Blog</code> 改为 <code>title: 隔壁老王</code> ，将 <code>header-img: img/home-bg.jpg</code> 修改为自己喜欢的图片。<br><img src="/img/in-post/jekyll-stg/hux-7.jpg"></p><p>打开 <strong>C:\Users\WDAGUtilityAccount\huxpro.github.io-master</strong> 文件夹中 <strong>_posts</strong> 文件夹，可以删除其中所有文件，然后自己编写博文在此文件夹中保存为 <strong>日期-XX.md</strong> 格式。<br><img src="/img/in-post/jekyll-stg/hux-8.jpg"></p><p>更改完毕后，返回 <strong>Ruby命令行窗口</strong> ，按下 <strong>Ctrl+C</strong> ，输入 <code>y</code> 按 <strong>Enter</strong> 关闭本地服务器，再输入 <code>bundle exec jekyll serve</code> ，按下 <strong>Enter</strong> 重新开启本地博客服务器<br><img src="/img/in-post/jekyll-stg/hux-9.jpg"></p><p>打开 <a href="http://127.0.0.1:4000/">http://127.0.0.1:4000/</a> 网页并刷新，若右下角弹出 <strong>REFRESH</strong> 按钮，直接点击以下<br><img src="/img/in-post/jekyll-stg/hux-10.jpg"></p><p>网页差不多变成自己想要的样子，还有诸多细节微调，自己慢慢尝试吧。<br><img src="/img/in-post/jekyll-stg/hux-11.jpg"></p><p>点开刚写进去的博客，感觉还不错🐶<br><img src="/img/in-post/jekyll-stg/hux-12.jpg"></p><p>进行下一步之前，先把  <strong>Ruby命令行窗口</strong> 关闭</p><h3 id="部署到-Github"><a href="#部署到-Github" class="headerlink" title="部署到 Github"></a>部署到 Github</h3><p>首先得有个 Github 账号，注册就不说了，直接登录 <a href="https://github.com/%EF%BC%8C%E7%84%B6%E5%90%8E%E5%BE%97%E4%B8%8B%E8%BD%BD%E4%B8%80%E4%B8%AA">https://github.com/，然后得下载一个</a> <a href="https://desktop.github.com/">Github 桌面版</a> ,浏览器中打开 (<a href="https://desktop.github.com/">https://desktop.github.com/</a>) ，点击 <a href="https://desktop.githubusercontent.com/github-desktop/releases/3.1.2-7cd66717/GitHubDesktopSetup-x64.exe">Download for Windows(64bid)</a><br><img src="/img/in-post/jekyll-stg/github-3.jpg"></p><p>打开 <strong>GitHubDesktopSetup-x64.exe</strong> ,在安装界面点击 <strong>Sign in to GitHub.com</strong><br><img src="/img/in-post/jekyll-stg/github-4.jpg"></p><p>在浏览器上弹出得窗口点击<strong>打开</strong><br><img src="/img/in-post/jekyll-stg/github-5.jpg"></p><p>在界面中点击 <strong>Finish</strong><br><img src="/img/in-post/jekyll-stg/github-6.jpg"></p><p>打开 路径 <strong>C:\Users\WDAGUtilityAccount</strong> ，修改 <strong>huxpro.github.io-master</strong> 文件夹名称为 <strong>zbqhew.github.io</strong> , <strong>zbqhew</strong> 为 github 自己账号的用户名。</p><p>返回 <strong>GitHub Desktop</strong> 界面，点击 <strong>Add an Existing Repository from your hard drive…</strong><br><img src="/img/in-post/jekyll-stg/github-7.jpg"></p><p>点击 <strong>Choose…</strong> 选择 <strong>zbqhew.github.io</strong> 文件夹，点击 <strong>create a repository</strong><br><img src="/img/in-post/jekyll-stg/github-8.jpg"></p><p>点击 <strong>Create repository</strong><br><img src="/img/in-post/jekyll-stg/github-9.jpg"></p><p>点击 <strong>Publish repository</strong><br><img src="/img/in-post/jekyll-stg/github-10.jpg"></p><p><strong>Keep this code private</strong>取消打✔，点击 <strong>Publish repository</strong><br><img src="/img/in-post/jekyll-stg/github-11.jpg"></p><p>等待上传成功后，我们打开浏览器，打开 <a href="https://github.com/">Github官网</a> ，选择刚上传的 <strong>zbqhew/zbqhew.github.io</strong> 仓库<br><img src="/img/in-post/jekyll-stg/github-12.jpg"></p><p>点击 <strong>Settings</strong> ,再点击 <strong>Pages</strong> ，在下面得界面中，我们应该就可以看到 <strong><a href="https://zbqhew.github.io/">https://zbqhew.github.io/</a></strong> 网址，若没有出现这个网址，点击 <strong>None</strong> 按钮，选择 <strong>main</strong> ,然后点 <strong>Save</strong> ，等待5分钟后，刷新网页，就可以看到 <strong><a href="https://zbqhew.github.io/">https://zbqhew.github.io/</a></strong> 了<br><img src="/img/in-post/jekyll-stg/github-13.jpg"></p><p>点击 <strong><a href="https://zbqhew.github.io/">https://zbqhew.github.io/</a></strong> 看看博客<br><img src="/img/in-post/jekyll-stg/github-14.jpg"></p><p>这就成了。</p><p>Tips：</p><ol><li>要翻墙，不然有很多步骤可能就卡住了</li><li>每次使用一个新的模板时，都要进入模板目录，运行一次<code>bundle install</code></li><li>有部分命令，官方文档中写的 <code>bundler</code> ，实际操作时，打错写成 <code>bundle</code> 也不影响</li><li>网上有些模板比较老，在模板目录中运行 <code>bunble install</code> 会失败</li></ol><h3 id="Jekyll-常用命令"><a href="#Jekyll-常用命令" class="headerlink" title="Jekyll 常用命令"></a>Jekyll 常用命令</h3><ul><li>jekyll –version 查看版本号</li><li>gem list jekyll 查看详细版本号</li><li>gem outdated 查看有新版本的包</li><li>gem update jekyll 更新Jekyll</li><li>gem install jekyll-docs 安装离线Jekyll文档</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 从入门到放弃 </tag>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>芳强故事</title>
      <link href="/2022/10/24/fangqiang-story/"/>
      <url>/2022/10/24/fangqiang-story/</url>
      
        <content type="html"><![CDATA[<p>后半夜，3点左右，强子打120说他老婆阿芳生病了，需要救护车，那是他在村里租的房子，说不清地址，120调度想要再详细询问时，强子手机信号不好，联系不上了。救护车只能先朝着大概方向跑。那村子在城市最南边，救护车花了半个多小时才开到大概位置，强子还把具体地址搞错了，又耽误了十几分钟。好不容易找到，强子就在路口等着救护车，强子把医生引进家里，只见阿芳倒在床边，半趴着，姿势怪异。将阿芳摆正，发现阿芳没有呼吸，没有脉搏，瞳孔散大，她已经死了。强子说40分钟前醒来看到她趴在那儿就一动不动叫不醒了，就赶紧打了120。医生知道她已经死亡很久了，没有救活的希望了，问强子是需要现场抢救还是直接送医院还是确认死亡料理后事，强子显然没有经历过这种事情，跪下来求医生：你救救她，就在这里救，求求你了…一边说一边磕头。医生一边劝他不要这样，一边给阿芳做心脏按压。医生虽然知道她肯定救不活，但是医院有规定，这种情况需要现场抢救30分钟，给患者一个希望，毕竟这个世界上没少发生过奇迹。这时护士把急救包、急救仪器全都搬了过来。给阿芳做了一个心电图，6根直线，没有任何波动。接着给患者上按压泵、气管插管、肾上腺素等一大套抢救措施。强子说：阿芳有糖尿病，白天还在门诊上挂水的，但当时精神很好，挂完水后和几个男的在一起过，回来睡个觉就这样了，肯定是被那几个男的害了。医生一听，这里面还有这故事，赶紧让他报警。强子还在说，阿芳才跟她半年，一直住一起，但是没有结婚，怎么就发生了这种事，阿芳今年55了，她老家内地的，原配丈夫死了，到这儿打工，工友介绍他们认识的，没多久就住一起了。阿芳有三个子女，但是据说大女儿远嫁、儿子出国，都不跟阿芳来往了，小女儿还联系，但是小女儿自己的生活也比较复杂，很少联系上。医生觉得强子可能做不了什么主了，让他先打110，让警察过来，再联系小女儿。可是小女儿一直联系不上。转眼半个多小时过去了，肾上腺素也推了一支又一支，医生知道奇迹不会出现了，跟强子交代了情况，强子还是不愿放弃，又跪下磕头，医生问他是想送去医院抢救吗，强子手足无措说自己没钱，就在家里抢救。医生答应了他的诉求。又过了几十分钟，警察来了，医生跟强子说明抢救了近1个小时了，已经没有希望了，确认死亡。强子不愿，说自己不是他亲属，没有权利决定，拒绝签知情同意书，拒绝放弃治疗。但是医生也不能将时间一直浪费在没有意义的事情上，给警察展示死亡心电图，告知警察确认死亡，强子对阿芳的死因存疑，现场抢救就到此结束，剩下的交给警察处理了。医生看了一眼这儿的居住环境，房子大概就一车库大小，破烂不堪，到处摆满了杂乱的物品，抢救费用也不收了。<br>阿芳中年妇女，家庭关系复杂，也没有钱，不会有人对她有所企图到谋害性命的程度吧。强子夜里醒来看到阿芳趴在地上叫不醒，应该是知道她已经死了，不然但凡有口气，正常人都要去把她扶起来的，但是强子不敢扶，房间里也不敢待，就到马路上等着救护车。<br>贫穷、胆小懦弱、愚昧，好卑微的生命。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 吃瓜日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>院前一夜</title>
      <link href="/2022/10/24/one-night-in-120/"/>
      <url>/2022/10/24/one-night-in-120/</url>
      
        <content type="html"><![CDATA[<p>又是一个忙碌的夜班，昨夜真是开了眼了，一个患者从4楼高坠落，尽然还能起身走路，还说没有哪里不舒服，让他跟我们去医院，还一个劲的不肯去。他晚上喝过酒，估计酒精的作用麻痹了他的神经。我看他坠落后有过一段时间的意识障碍，胸口也有压痛，还是很有必要去医院检查下的，好说歹说劝他上了救护车。到达医院后，可能因为钱的问题，又不肯去检查了，直接走着离开了医院。我想着，这个人表面看上去没什么事，万一要是有内出血，而且出血量大没有及时处理，挂掉都有可能，但是这个人就是不愿意听医院的，只能祈求他多福多贵长命百岁了。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 美丽心情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远离大卡车</title>
      <link href="/2022/10/22/stay-away-from-big-trucks/"/>
      <url>/2022/10/22/stay-away-from-big-trucks/</url>
      
        <content type="html"><![CDATA[<p>今天一起车祸，母亲骑电动车载着15岁女儿，在十字路口被大卡车撞到，在现场我先看到女儿，额头上约15公分的伤口，人还是清醒，路人提醒我，路中间卡车旁还有一个患者，我把手中棉垫交给同事，让她帮我处理这个女儿，我去看下那个母亲。这个母亲已没有呼吸，面部大面积皮肉外翻露骨，地上大量鲜血，头上还带着头盔，我将其身体翻正，解开其头盔和围巾，摸了颈动脉，没有搏动。警察来到我身边问怎么样，我说没有生命迹象。我接着又给这个母亲做了个心电图，确认死亡。一般情况，我们会将她抬上救护车，给她心肺复苏大抢救的，但是她的女儿也需要尽快送去医院处理，救护车已经装不下了。这个母亲就交给警察处理了。</p><p>返回救护车上，这个女儿已经被我的同事安排好，除了额头大创伤，身上还有多处擦伤，好在生命体征平稳。路上没有提一个问题，也没有任何表情，她应该知道她妈妈的情况，但是懵了。</p><p>到医院交接后，我就去忙其他任务了，这事在我这儿就算过了。但我仍然在想这女儿过一会儿大概是要大哭一场，这母亲大概会被直接送往火化场。事故所在路口是在市区，车流量非常大的路口，卡车司机应该要降速注意路人的，这个母亲即使带上头盔也应该注意马路上来往车辆的，但是悲剧还是发生了。</p><p>这个母亲带了头盔，仍然没逃过一劫，并不能说明头盔没用，好几年以前，强制骑电动车带头盔以后，车祸数量没什么感觉，但是医院里车祸导致的脑外伤病人明显变少了很多，可见带头盔还是非常有意义的。戴上头盔，我们在马路上仍然要万分小心，尤其是大卡车，在绝对的质量面前，任何护具都不堪一击！感觉在医院里很多车祸死亡的都是大卡车渣土车造成的。</p><p>珍爱生命，远离大卡车！</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 美丽心情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>客舍青青</title>
      <link href="/2013/07/01/ke-she-qing-qing/"/>
      <url>/2013/07/01/ke-she-qing-qing/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
        <tags>
            
            <tag> 美丽心情 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
